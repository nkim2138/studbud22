{"mappings":"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","sources":["public/components/pomodoro.js"],"sourcesContent":["\r\n// POMODORO\r\nconst el = document.querySelector(\".pomodoroTimer\");\r\n// const bell = document.querySelector(\"audio\");\r\n\r\nconst minTime = document.querySelector(\".mins\");\r\nconst secTime = document.querySelector(\".secs\");\r\n\r\nconst startBtn = document.getElementById(\"pomodoroStart\");\r\nconst sessionText = document.querySelector(\".session\");\r\n\r\n// local storage\r\nlocalStorage.setItem(\"btn\", \"focus\");\r\n\r\n// declaring variables\r\nlet initial, totalsecs, perc, paused, mins, secs;\r\n\r\n// to start button for click event\r\nstartBtn.addEventListener(\"click\", () => {\r\n\r\n    // get btn from local storage\r\n    let btn = localStorage.getItem(\"btn\");\r\n\r\n    // will be converted into integer with \"+\"\r\n    if (btn === \"focus\") {\r\n        mins = +localStorage.getItem(\"focusTime\")  || 25;\r\n    }\r\n    else {\r\n        mins = +localStorage.getItem(\"breakTime\")  || 5;\r\n    }\r\n\r\n\r\n    // converting mins to secs\r\n    secs = mins * 60;\r\n    totalsecs = mins * 60;\r\n    setTimeout(decremenT(), 60);\r\n    startBtn.style.transform = \"scale(0)\";\r\n    paused = false;\r\n\r\n});\r\n\r\nfunction decremenT() {\r\n    minTime.textContent = Math.floor(secs / 60);\r\n    // returns as 2 digit format eg. 01,02...09\r\n    secTime.textContent = secs % 60 > 9 ? secs % 60 : `0${secs % 60}`;\r\n\r\n    if (circle.classList.contains(\"almostDone\")) {\r\n        circle.classList.remove(\"almostDone\");\r\n    }\r\n\r\n    if (secs > 0) {\r\n        // calculate percentage\r\n        // will be a whole number between 0 and 100\r\n        perc = Math.ceil(((totalsecs - secs) / totalsecs) * 100);\r\n        setProgress(perc);\r\n\r\n        secs--;\r\n        initial = window.setTimeout(\"decremenT()\",1000);\r\n\r\n        // if it is less than 10 seconds colour will become darker\r\n        if (secs < 10) {\r\n            circle.classList.add(\"almostDone\");\r\n        }\r\n    }\r\n    else {\r\n        mins = 0;\r\n        secs = 0;\r\n        // bell.play();\r\n        let btn = localStorage.getItem(\"btn\");\r\n\r\n        // display break button once focus is done\r\n        if (btn === \"focus\") {\r\n            startBtn.textContent = \"Break\"; \r\n            startBtn.classList.add(\"break\");\r\n            localStorage.setItem(\"btn\", \"break\");\r\n        }\r\n\r\n        // display focus button once break is done\r\n        else {\r\n           startBtn.classList.remove(\"break\");\r\n           startBtn.textContent = \"Focus\";\r\n           localStorage.setItem(\"btn\",\"focus\");\r\n        }\r\n        \r\n        // start button reappears\r\n        startBtn.style.transform = \"scale(1)\";\r\n    }\r\n}\r\n\r\n// circle that visually shows progress\r\nconst circle = document.querySelector(\".progress-ring-circle\");\r\nconst radius = circle.r.baseVal.value;\r\nconst circumference = radius * 2 * Math.PI;\r\n\r\ncircle.style.strokeDasharray = circumference;\r\ncircle.style.strokeDashoffset = circumference;\r\n\r\nfunction setProgress(percent){\r\n    const offset = circumference - (percent / 100) * circumference;\r\n    circle.style.strokeDashoffset = offset;\r\n}\r\n\r\n\r\n// settings\r\nconst focusTimeInput = document.getElementById(\"focusTime\");\r\nconst breakTimeInput = document.getElementById(\"breakTime\");\r\nconst pauseBtn = document.getElementById(\"pomodoroPause\");\r\n\r\nfocusTimeInput.value = localStorage.getItem(\"focusTime\");\r\nbreakTimeInput.value = localStorage.getItem(\"breakTime\");\r\n\r\n// get value of user input\r\n//input will be stored even when user refreshes\r\ndocument.getElementById(\"setTime\").addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"focusTime\", focusTimeInput.value);\r\n    localStorage.setItem(\"breakTime\", breakTimeInput.value);\r\n    document.getElementById(\"userSaves\").innerHTML = \" * Saved details :)\"\r\n    console.log(\"Saved\");\r\n});\r\n\r\n// reset back to default time\r\ndocument.getElementById(\"pomodoroEnd\").addEventListener(\"click\", () => {\r\n    // when user ends pomodoro timer the start button reappears\r\n    startBtn.style.transform = \"scale(1)\";\r\n    clearTimeout(initial);\r\n    setProgress(0);\r\n    // returns to 00:00\r\n    minTime.textContent = \"00\";\r\n    secTime.textContent = \"00\";\r\n})\r\n\r\npauseBtn.addEventListener(\"click\", () => {\r\n    if (paused === undefined) {\r\n        return;\r\n    }\r\n    if (paused) {\r\n        paused = false;\r\n        initial = setTimeout(\"decremenT()\", 60);\r\n        pauseBtn.textContent = \"Pause\";\r\n        pauseBtn.classList.remove(\"resume\");\r\n    }\r\n    else{\r\n        clearTimeout(initial);\r\n        pauseBtn.textContent = \"Resume\";\r\n        pauseBtn.classList.add(\"Resume\");\r\n        paused = true;\r\n    }\r\n\r\n})"],"names":[],"version":3,"file":"index.b69a0c35.js.map","sourceRoot":"/__parcel_source_root/"}